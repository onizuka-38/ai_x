-- [III] join : 2개 이상의 테이블을 연결하여 데이터를 검색하는 방법
SELECT * FROM EMP WHERE ENAME='SCOTT'; -- 1행
SELECT * FROM DEPT; -- 4행
SELECT * FROM EMP
	WHERE ENAME='SCOTT'; -- 1(EMP갯수)*4(DEPT갯수) =>4행

-- 1. EQUI JOIN(공통필드 값이 일치되는 조건만 JOIN)	
SELECT *
	FROM EMP, DEPT
	WHERE ENAME = 'SCOTT' AND EMP.DEPTNO=DEPT.DEPTNO;

SELECT EMPNO NO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPT.DEPTNO , DNAME, LOC
	FROM EMP, DEPT
	WHERE ENAME='SCOTT' AND EMP.DEPTNO=DEPT.DEPTNO;

SELECT EMPNO NO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, D.DEPTNO , DNAME, LOC	--(3)
	FROM EMP E, DEPT D							--(1)
	WHERE ENAME='SCOTT' AND E.DEPTNO=D.DEPTNO;	--(2) 테이블 별칭만 사용 가능
	ORDER BY NO;								--(4)
	
	-- EX1. 모든 사원의 사번, 이름, JOB, 상사사번, 부서번호, 부서명, 근무지
	SELECT EMPNO, ENAME, JOB, MGR, D.DEPTNO, DNAME, LOC
		FROM EMP E, DEPT D
		WHERE E.DEPTNO =D.DEPTNO;
	
	-- EX2. 급여(SAL)이 2000이상인 직원의 이름, JOB, 급여, 부서명, 근무지
	SELECT ENAME, JOB, SAL, DNAME, LOC
		FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO  AND SAL>=2000;
	
	-- EX3. 근무지(LOC)가 'CHICAGO'인 직원의 이름, JOB, 급여, 부서번호 출력
	SELECT ENAME, JOB, SAL, D.DEPTNO FROM EMP E, DEPT D
		WHERE E.DEPTNO = D.DEPTNO AND LOC='CHICAGO'
		
	-- EX4. 82년도에 입사한 10, 20번 부서직원의 이름, 급여, 근무지(급여순) 출력
	SELECT ENAME, SAL, LOC FROM EMP E, DEPT D
		WHERE E.DEPTNO = D.DEPTNO AND TO_CHAR(HIREDATE, 'RR')='82'
			AND E.DEPTNO IN (10,20)
		ORDER BY SAL;
	
	-- EX5. JOB이 'SALESMAN'이거나 'MAGANER'인 사원의
		-- 이름, 급여, 상여, 연봉(SAL+COMM)*12, 부서명, 근무지(연봉이 큰 순) 출력
	SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0))*12 연봉, DNAME, LOC
		FROM EMP E, DEPT D
		WHERE E.DEPTNO = D.DEPTNO AND JOB IN ('SALESMAN', 'MANAGER')
		ORDER BY 연봉 DESC;
	
	-- EX6. COMM이 NULL이고, SAL이 2000대인 사원의 이름, 급여, 입사일, 부서번호, 부서명
		-- 부서명 순, 급여순 정렬
	SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME
		FROM EMP E, DEPT D
		WHERE E.DEPTNO = D.DEPTNO AND COMM IS NULL AND SAL BETWEEN 2000 AND 2999;
		ORDER BY E.DEPTNO
		
		
		
		
		
		
		
		
		
		
		
		
		
		







