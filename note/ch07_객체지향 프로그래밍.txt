class 클래스명(상속받을 클래스명):
    변수나 함수들 선언

생성자는 : __init__(self, 매개변수,..) - 객체가 생성될 때 자동 실행
         객체 생성시 필요한 인스턴스 변수 초기화를 포함
소멸자 : __del__(self) - 객체가 소멸될 때 자동 실행
        인스턴스 객체의 레퍼런스 카운트가 0이 될 때 실행

- 인스턴스 메소드 : 첫번째 인자에 self를 꼭 명시. 객체를 통해서만 호출할 수 있는 메소드
- 클래스 메소드 : 메소드 위에 @classmethod 를 선언한 메소드. 첫번째 인자에 cls(clz) 꼭 명시
- static 메소드 : 메소드위에 @staticmethod를 선언한 메소드. 인자를 넣지 않음

class 클래스명:
        '독스트링'
        클래스변수명 = 값
        def __init__(self, [객체멤버를 초기화할 변수=값, ...]):
            self.인스턴스(일반)변수 = 값
            객체를 생성할 때 객체 멤버변수의 초기화
        def method(self):
            인스턴스 메소드(일반함수)의 매개변수는 self를 반드시 포함
        @classmethod
        def classmethod(cls):
            코드
        @staticmethod
        def staticmethod():
            코드
    객체변수 = 클래스명()
    객체변수.method()
    클래스명.classmethod
    클래스명.staticmethod

!. 상속과 재정의 !
- 클래스를 재사용
- 상속을 이용하면 부모클래스의 모든 속성을 자식클래스로 물려줄 수 있음
- 문법 : class 자식클래스명(부모클래스명):

## 정적 변수(static 변수) : 여러 객체들 사이에 데이터를 공유하고 싶을 때 사용
- static 변수 앞에 under score 2개(__)를 붙이면 클래스명._클래스명__static변수명으로 참조
- 클래스변수는 외부에서 바로 접근 가능
- static 변수는 외부에서 바로 접근하는 것을 방지
- static 변수는 클래스 내부에서만 접근하도록 하려는 의도