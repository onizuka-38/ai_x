할당: a = b처럼 단순 할당을 하면, 두 변수는 같은 데이터를 가리킨다.
	하나를 바꾸면 다른 것도 바뀐다.

뷰(View): 배열을 슬라이싱하면 원본 데이터를 공유하는 "얕은 복사"가 만들어진다.
	 .view()를 써서도 만들 수 있다.

깊은 복사: .copy()를 사용하면 원본과 독립적인 복사본을 만든다.
	 복사본을 바꿔도 원본은 변하지 않는다.

슬라이싱 자동 뷰: 배열을 arr[:,:-1] 같은 방식으로 슬라이싱하면
	 자동으로 뷰가 생성되어 원본과 연결된다.

고급 인덱싱: 숫자 리스트나 배열을 인덱스로 사용하면
	 원하는 위치의 데이터만 골라낼 수 있다.

인덱스 배열: 예를 들어 a[[0,1,5]]는 0, 1, 5번째 요소만 가져온다.

2차원 인덱싱: a[[[0,0],[1,5]]]처럼 다차원 배열을 인덱스로 쓸 수 있다.

조건 인덱싱: 특정 조건(arr > 3)을 만족하는 요소만 선택할 수 있다.

선형대수
- 2차원 넘파이 배열을 행렬
    * 행렬곱 : @, dot(), 단위행렬
    * 역행렬 : np.linalg.inv(행렬) : 역행렬@행렬 = 단위행렬
    * 전체행렬 : 행렬.T / 행렬.transpose()